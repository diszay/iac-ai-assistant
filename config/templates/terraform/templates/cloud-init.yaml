#cloud-config
# Cloud-init configuration template for Proxmox VMs
# Generated by Proxmox AI Assistant with security-first approach

# System information
hostname: ${hostname}
fqdn: ${hostname}.${domain}
manage_etc_hosts: true
timezone: ${timezone}
locale: ${locale}

# User configuration
users:
  - name: ${username}
    groups: [adm, audio, cdrom, dialout, dip, floppy, lxd, netdev, plugdev, sudo, video]
    shell: /bin/bash
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    ssh_authorized_keys:
      - ${ssh_authorized_keys}
    passwd: ${password_hash}
    lock_passwd: false
    ssh_pwauth: false

# Disable root login
disable_root: true
ssh_pwauth: false

# Package management
package_update: true
package_upgrade: ${security_updates}
package_reboot_if_required: true

# Essential packages for security and functionality
packages:
  - curl
  - wget
  - vim
  - htop
  - unzip
  - git
  - software-properties-common
  - apt-transport-https
  - ca-certificates
  - gnupg
  - lsb-release
  - net-tools
  - tree
  - jq
  %{ if fail2ban_enabled ~}
  - fail2ban
  %{ endif ~}
  %{ if ufw_enabled ~}
  - ufw
  %{ endif ~}
  %{ if docker_enabled ~}
  - docker.io
  - docker-compose
  %{ endif ~}
  %{ if monitoring_enabled ~}
  - prometheus-node-exporter
  %{ endif ~}
  ${packages}

# SSH configuration for security
ssh:
  emit_keys_to_console: false
  ssh_deletekeys: true
  ssh_genkeytypes: [rsa, ecdsa, ed25519]
  allow_public_ssh_keys: true

# Network configuration (handled by Proxmox)
network:
  config: disabled

# Security hardening
bootcmd:
  - echo 'Starting security hardening...'

runcmd:
  # Update system
  - apt-get update
  - apt-get upgrade -y
  - apt-get autoremove -y
  
  # SSH hardening
  - sed -i 's/#PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config
  - sed -i 's/#PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
  - sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/' /etc/ssh/sshd_config
  - sed -i 's/#AuthorizedKeysFile/AuthorizedKeysFile/' /etc/ssh/sshd_config
  - sed -i 's/X11Forwarding yes/X11Forwarding no/' /etc/ssh/sshd_config
  - echo 'AllowUsers ${username}' >> /etc/ssh/sshd_config
  - echo 'Protocol 2' >> /etc/ssh/sshd_config
  - echo 'MaxAuthTries 3' >> /etc/ssh/sshd_config
  - echo 'ClientAliveInterval 300' >> /etc/ssh/sshd_config
  - echo 'ClientAliveCountMax 2' >> /etc/ssh/sshd_config
  - systemctl restart ssh

  # Configure UFW firewall
  %{ if ufw_enabled ~}
  - ufw --force reset
  - ufw default deny incoming
  - ufw default allow outgoing
  - ufw allow ssh
  - ufw allow out 53
  - ufw allow out 80
  - ufw allow out 443
  - ufw allow out 123
  - ufw --force enable
  - systemctl enable ufw
  %{ endif ~}

  # Configure fail2ban
  %{ if fail2ban_enabled ~}
  - systemctl enable fail2ban
  - systemctl start fail2ban
  - |
    cat > /etc/fail2ban/jail.local << EOF
    [DEFAULT]
    bantime = 3600
    findtime = 600
    maxretry = 3
    backend = systemd
    
    [sshd]
    enabled = true
    port = ssh
    filter = sshd
    logpath = /var/log/auth.log
    maxretry = 3
    bantime = 3600
    EOF
  - systemctl restart fail2ban
  %{ endif ~}

  # System hardening
  - echo 'net.ipv4.ip_forward=0' >> /etc/sysctl.conf
  - echo 'net.ipv4.conf.all.send_redirects=0' >> /etc/sysctl.conf
  - echo 'net.ipv4.conf.default.send_redirects=0' >> /etc/sysctl.conf
  - echo 'net.ipv4.conf.all.accept_redirects=0' >> /etc/sysctl.conf
  - echo 'net.ipv4.conf.default.accept_redirects=0' >> /etc/sysctl.conf
  - echo 'net.ipv4.conf.all.secure_redirects=0' >> /etc/sysctl.conf
  - echo 'net.ipv4.conf.default.secure_redirects=0' >> /etc/sysctl.conf
  - echo 'net.ipv4.icmp_echo_ignore_broadcasts=1' >> /etc/sysctl.conf
  - echo 'net.ipv4.icmp_ignore_bogus_error_responses=1' >> /etc/sysctl.conf
  - echo 'net.ipv4.conf.all.log_martians=1' >> /etc/sysctl.conf
  - echo 'net.ipv4.conf.default.log_martians=1' >> /etc/sysctl.conf
  - echo 'kernel.dmesg_restrict=1' >> /etc/sysctl.conf
  - echo 'kernel.kptr_restrict=2' >> /etc/sysctl.conf
  - sysctl -p

  # Configure automatic security updates
  %{ if security_updates ~}
  - apt-get install -y unattended-upgrades
  - dpkg-reconfigure -plow unattended-upgrades
  - |
    cat > /etc/apt/apt.conf.d/20auto-upgrades << EOF
    APT::Periodic::Update-Package-Lists "1";
    APT::Periodic::Unattended-Upgrade "1";
    APT::Periodic::AutocleanInterval "7";
    APT::Periodic::Download-Upgradeable-Packages "1";
    EOF
  %{ endif ~}

  # Docker configuration (if enabled)
  %{ if docker_enabled ~}
  - usermod -aG docker ${username}
  - systemctl enable docker
  - systemctl start docker
  - |
    cat > /etc/docker/daemon.json << EOF
    {
      "log-driver": "json-file",
      "log-opts": {
        "max-size": "10m",
        "max-file": "3"
      },
      "live-restore": true,
      "userland-proxy": false,
      "no-new-privileges": true
    }
    EOF
  - systemctl restart docker
  %{ endif ~}

  # Monitoring setup (if enabled)
  %{ if monitoring_enabled ~}
  - systemctl enable prometheus-node-exporter
  - systemctl start prometheus-node-exporter
  %{ endif ~}

  # Set proper file permissions
  - chmod 700 /home/${username}/.ssh
  - chmod 600 /home/${username}/.ssh/authorized_keys
  - chown -R ${username}:${username} /home/${username}/.ssh

  # Clean up
  - apt-get autoremove -y
  - apt-get autoclean
  - history -c
  - echo 'Cloud-init configuration completed successfully'

# Write additional configuration files
write_files:
  - path: /etc/motd
    content: |
      ================================================================
      Welcome to ${hostname}
      
      This system is managed by Terraform and Proxmox AI Assistant
      Security hardening has been applied automatically
      
      System Information:
      - Hostname: ${hostname}
      - Domain: ${domain}
      - Timezone: ${timezone}
      - Locale: ${locale}
      
      Security Features Enabled:
      - SSH key-based authentication only
      - UFW firewall: ${ufw_enabled}
      - Fail2ban intrusion prevention: ${fail2ban_enabled}
      - Automatic security updates: ${security_updates}
      - System hardening applied
      
      For support: https://github.com/your-repo/proxmox-ai-assistant
      ================================================================
    permissions: '0644'

  - path: /etc/security/limits.conf
    append: true
    content: |
      # Security limits
      * soft nofile 65536
      * hard nofile 65536
      * soft nproc 32768
      * hard nproc 32768

  - path: /home/${username}/.vimrc
    content: |
      syntax on
      set number
      set tabstop=2
      set shiftwidth=2
      set expandtab
      set hlsearch
      set incsearch
      set ignorecase
      set smartcase
    owner: ${username}:${username}
    permissions: '0644'

  - path: /home/${username}/.bashrc
    append: true
    content: |
      # Custom aliases and functions
      alias ll='ls -alF'
      alias la='ls -A'
      alias l='ls -CF'
      alias grep='grep --color=auto'
      alias fgrep='fgrep --color=auto'
      alias egrep='egrep --color=auto'
      
      # Git shortcuts
      alias gs='git status'
      alias ga='git add'
      alias gc='git commit'
      alias gp='git push'
      alias gl='git log --oneline'
      
      # System shortcuts
      alias df='df -h'
      alias du='du -h'
      alias free='free -h'
      alias ps='ps aux'
      
      # Safety aliases
      alias rm='rm -i'
      alias cp='cp -i'
      alias mv='mv -i'
      
      # Docker shortcuts (if enabled)
      %{ if docker_enabled ~}
      alias dps='docker ps'
      alias dpsa='docker ps -a'
      alias di='docker images'
      alias dlog='docker logs'
      alias dexec='docker exec -it'
      %{ endif ~}
    owner: ${username}:${username}

# Power management
power_state:
  delay: "+1"
  mode: reboot
  message: "Rebooting after cloud-init setup"
  timeout: 30
  condition: True

# Final message
final_message: |
  Cloud-init setup completed successfully!
  System is ready for use with security hardening applied.
  
  Security features configured:
  - SSH hardened with key-based authentication
  - Firewall configured and enabled
  - Intrusion prevention system active
  - Automatic security updates enabled
  - System kernel parameters hardened
  
  You can now connect via SSH using your private key:
  ssh ${username}@$(hostname -I | cut -d' ' -f1)
  
  The system will reboot in 30 seconds to complete the configuration.